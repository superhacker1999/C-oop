#include <iostream>
#include <string>
using namespace std;

class Point 
{
    // <- модификатор доступа private: protected: public: 
    // приватный только для использования в этом же классе, 
    // либо дружественных классах (в мейне использовать нельзя)
    // если не обозначить классу модификатор доступа, то он будет приватным
    // по умолчанию.
    // все, что ниже определенного модификатора доступа - считывается компилятором
    // как свойства и методы этого класса
    // протектед = приватный, но доступ можно будет получить при наследовании
    public: // все что ниже паблик
    
    int x;

    void Print() {
        //  cout << "y =  "; 
        //  Printy();
        //  cout << "\nx = " << x << "\nz = " << z << endl;
         printf("\ny = %d\nx = %d\nz = %d", Printy(), x, z);
    }

    private: // все что ниже - приват
    int y;
    int z;
    int Printy() { // метод является приватным, но его можно вызвать внутри класса
        // cout << y;
        return y;
    }
};


int main () 
{
    setlocale(LC_ALL, "ru"); // для возможности пользоваться киррилицей
    Point a;
    a.x = 1;
    a.Print();
    

   

}